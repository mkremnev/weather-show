(()=>{"use strict";const e=()=>{const e=document.createElement("div");e.classList.add("city-scoreboard-weather");const t=(()=>{const e=document.createElement("div");e.classList.add("icon-weather");const t=document.createElement("div");t.classList.add("icon-wrapper-weather");const n=document.createElement("img");return n.setAttribute("src","/assets/img/icon.png"),n.setAttribute("alt","Weather"),t.insertAdjacentElement("beforeend",n),e.insertAdjacentElement("beforeend",t),r.subscribe((({weather:e})=>{n.setAttribute("src",`http://openweathermap.org/img/wn/${e.current?.weather[0].icon}@2x.png`)}),"api"),e})(),n=(()=>{const e=document.createElement("div");return e.classList.add("scoreboard-first-line"),e.insertAdjacentHTML("afterbegin",'<div class="first-line-item humidity-weather">\n            <div class="item-title">\n              <i class="icon-title humidity"></i>\n              <div class="title-text">Humidity</div>\n            </div>\n            <div class="item-value">69 %</div>\n          </div>\n          <div class="first-line-item wind-weather">\n            <div class="item-title">\n              <i class="icon-title wind"></i>\n              <div class="title-text">Wind</div>\n            </div>\n            <div class="item-value">1,5 km</div>\n          </div>\n         '),r.subscribe((({weather:t})=>{const n=e.querySelector(".humidity-weather > .item-value"),i=e.querySelector(".wind-weather > .item-value");n.textContent=`${Math.round(t.current.humidity)} %`,i.textContent=`${Math.round(t.current.wind_speed)} km`}),"api"),e})(),i=(()=>{const e=document.createElement("div");return e.classList.add("scoreboard-second-line"),e.insertAdjacentHTML("afterbegin",'<div class="temp-weather">\n            <span class="temp-value">\n              26\n            </span>\n            <span class="temp-ext">C<sup class="temp-c">0</sup></span>\n          </div>\n          '),r.subscribe((({weather:t})=>{e.querySelector(".temp-weather > .temp-value").textContent=`${Math.round(t.current.temp)}`}),"api"),e})();return e.insertAdjacentElement("afterbegin",t),e.insertAdjacentElement("beforeend",n),e.insertAdjacentElement("beforeend",i),e},t=()=>{const e=document.createElement("div");return e.classList.add("days-items-weather","scroll-section"),r.subscribe((({weather:t})=>{e.innerHTML=null,t.daily.forEach(((t,n)=>{n>0&&e.insertAdjacentElement("beforeend",(({icon:e,temp:t,day:n})=>{const i=document.createElement("div");return i.classList.add("days-item-weather"),i.insertAdjacentHTML("beforeend",`<div class="day-name">${n}</div>\n            <div class="day-icon">\n              <img src="${e}" alt="" />\n            </div>\n            <div class="day-temp">\n              ${t}\n              <span class="day-temp-ext">\n                C\n                <sup class="day-temp-c">0</sup>\n              </span>\n            </div>`),i})({icon:`http://openweathermap.org/img/wn/${t.weather[0].icon}@2x.png`,temp:`${Math.round(t.temp.morn)}`,day:"M"}))}))}),"api"),e},n=()=>{const n=document.createElement("div");n.classList.add("display-weather");const i=(()=>{const e=document.createElement("div");e.classList.add("header-weather");const t=document.createElement("div");return t.classList.add("header-title"),e.insertAdjacentElement("afterbegin",t),r.subscribe((({weather:e})=>{t.textContent=e.current.weather[0].description}),"api"),e})(),a=(()=>{const e=document.createElement("div");e.classList.add("city-name-weather");const t=document.createElement("div");return t.classList.add("city-name"),e.insertAdjacentElement("afterbegin",t),r.subscribe((({city:e})=>{t.textContent=e.city}),"api"),e})(),s=e(),c=(()=>{const e=document.createElement("div");return e.classList.add("title-line-weather"),e.insertAdjacentHTML("afterbegin",'<div class="title-content">Days</div>'),e})(),d=(()=>{const e=t(),n=document.createElement("div");return n.classList.add("temp-days-weather"),n.insertAdjacentElement("beforeend",e),n})(),o=(()=>{const e=document.createElement("div");e.classList.add("nav-weather");const t=document.createElement("div");t.classList.add("button-nav-weather"),t.setAttribute("type","button"),t.insertAdjacentHTML("afterbegin",'<i class="icon-nav-weather maps"></i>');const n=document.createElement("div");return n.classList.add("button-nav-weather"),n.setAttribute("type","button"),n.insertAdjacentHTML("afterbegin",'<i class="icon-nav-weather cities"></i>'),t.addEventListener("click",(()=>{r.notify("maps","ui")})),n.addEventListener("click",(()=>{r.notify("cities","ui")})),e.insertAdjacentElement("beforeend",t),e.insertAdjacentElement("beforeend",n),e})(),l=document.createElement("div");return l.classList.add("content-weather"),l.insertAdjacentElement("afterbegin",i),l.insertAdjacentElement("beforeend",a),l.insertAdjacentElement("beforeend",s),l.insertAdjacentElement("beforeend",c),l.insertAdjacentElement("beforeend",d),l.insertAdjacentElement("beforeend",o),n.insertAdjacentElement("afterbegin",l),n};async function i(e){try{return(await fetch(`https://api.api-ninjas.com/v1/city/?name=${e}`,{method:"GET",headers:{"X-Api-Key":"p+Ja5tLRLZfYBudc7tNjsw==FQHxGmNa2PDOHI8k"}})).json()}catch(e){console.log(e.message)}}async function a(e){try{return(await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${e?.latitude}&lon=${e?.longitude}&exclude=minutely,hourly&appid=eaed0d5655c6e3e6b439dd8c5015b32e&units=metric`)).json()}catch(e){console.log(e.message)}}function s(){const e=JSON.parse(localStorage.getItem("cities"))??[];return e.length>=10&&e.slice(0,10),e}const c=()=>{const e=(()=>{const e=document.createElement("div");e.classList.add("city-wrapper");const t=document.createElement("form");return t.classList.add("city-form"),t.insertAdjacentHTML("afterbegin",'\n          <div class="input-wrapper">\n            <label for="input-city">Введите название города</label>\n            <input id="input-city" class="input" placeholder="Название города">\n          </div>\n          <div class="city-actions">\n            <button type="submit" class="btn">Найти</button>\n          </div>\n        '),e.insertAdjacentElement("afterbegin",t),t.addEventListener("submit",(async e=>{e.preventDefault();const n=t.querySelector(".input"),c=t.querySelector(".btn"),d=n.value;c.textContent="Loading...";const o=(await i(d)).map((e=>({city:e.name,latitude:e.latitude,longitude:e.longitude})))[0],l=await a(o);c.textContent="Найти",function(e){const t=JSON.parse(localStorage.getItem("cities"))??[],n=e.toLowerCase();t.includes(n)||(t.length>=10&&t.shift(),t.push(n),localStorage.setItem("cities",JSON.stringify(t)))}(o.city);const m=s();r.notify({city:o,weather:l},"api"),r.notify([o.latitude,o.longitude],"maps"),r.notify("cities","ui"),r.notify(m,"add-cities")})),e})(),t=(()=>{const e=document.createElement("div");return e.classList.add("list-cities"),e.insertAdjacentHTML("beforeend",'<h2>Список введенных городов</h2>\n          <div class="cities-wrapper"></div>\n          '),r.subscribe((t=>{const n=e.querySelector(".cities-wrapper");n.innerHTML=null,t.length>0?t.forEach((e=>{const t=document.createElement("button");t.classList.add("cities-btn"),t.type="button",t.textContent=e,n.insertAdjacentElement("beforeend",t),t.addEventListener("click",(async()=>{const t=(await i(e)).map((e=>({city:e.name,latitude:e.latitude,longitude:e.longitude})))[0],n=await a(t);r.notify({city:t,weather:n},"api"),r.notify([t.latitude,t.longitude],"maps"),r.notify("cities","ui")}))})):n.textContent="Вы еще не ввели ни одного города"}),"add-cities"),e})(),n=document.createElement("div");return n.classList.add("insert-city-modal"),n.insertAdjacentElement("afterbegin",e),n.insertAdjacentElement("beforeend",t),r.subscribe((e=>{"cities"===e&&n.classList.toggle("open")}),"ui"),n},r=new class{constructor(){this.observer=[]}subscribe(e,t){this.observer.push({[t]:e})}unsubscribe(e,t){this.observer=this.observer.filter((n=>n[e]!==t))}notify(e,t){this.observer.filter((e=>Object.keys(e).includes(t))).forEach((n=>n[t](e)))}};(async()=>{await async function(){return new Promise(((e,t)=>{const n=document.createElement("script");n.onload=e,n.onerror=t,n.type="text/javascript",n.src="https://api-maps.yandex.ru/2.1/?lang=ru_RU&apikey=928d9c6e-0b85-4e08-bb60-4334a283af57",document.body.appendChild(n)})).then((()=>new Promise((e=>ymaps.ready(e)))))}();const e=await async function(){try{return(await fetch("https://get.geojs.io/v1/ip/geo.json")).json()}catch(e){console.log(e.message)}}(),t=await a(e),n=s();r.notify({city:e,weather:t},"api"),r.notify({city:e},"createMap"),r.notify(n,"add-cities")})(),document.getElementById("root").insertAdjacentElement("afterbegin",(()=>{const e=(()=>{const e=document.createElement("div");return e.classList.add("container-bg"),e})(),t=(()=>{const e=document.createElement("div");return e.classList.add("maps-modal"),e.insertAdjacentHTML("afterbegin",'<div id="map"></div>'),r.subscribe((({city:e})=>{var t;window.map=(t={center:[e.latitude,e.longitude],zoom:10},new ymaps.Map("map",t))}),"createMap"),r.subscribe((e=>{console.log(e),window.map.panTo(e)}),"maps"),r.subscribe((t=>{"maps"===t&&e.classList.toggle("open")}),"ui"),e})(),i=n(),a=c(),s=document.createElement("div");s.classList.add("app");const d=document.createElement("div");d.classList.add("box");const o=document.createElement("div");return o.classList.add("loader"),d.insertAdjacentElement("beforeend",o),s.insertAdjacentElement("afterbegin",e),s.insertAdjacentElement("afterbegin",i),s.insertAdjacentElement("beforeend",d),s.insertAdjacentElement("beforeend",a),s.insertAdjacentElement("beforeend",t),r.subscribe((()=>{d.style.display="none"}),"api"),s})())})();